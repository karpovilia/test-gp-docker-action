name: Build and publish on the master branch

on: 
  push:
    branches:
    - "master"

    
jobs:
  build-and-publish-head:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.5.0 # Checking out the repo

    - name: Build and Publish head Docker image
      uses: VaultVulp/gp-docker-action@1.6.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
        image-name: my-cool-service-ki # Provide Docker image name
        image-tag: head # Provide Docker image tag

  build-and-publish-latest:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.5.0 # Checking out the repo

    - name: Build and Publish latest Docker image
      uses: VaultVulp/gp-docker-action@1.6.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
        image-name: my-cool-service-ki # Provide only Docker image name, tag will be automatically set to latest
        dockerfile: Secondary.Dockerfile
  
  build-with-custom-context-dev:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.5.0 # Checking out the repo

    - name: Build and Publish head Docker image
      uses: VaultVulp/gp-docker-action@1.6.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
        image-name: my-cool-service-ki # Provide Docker image name
        build-context: ./different-context # Provide path to the folder with the Dockerfile

  pull-and-build-image:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.5.0 # Checking out the repo

    - name: Build and Publish head Docker image
      uses: VaultVulp/gp-docker-action@1.6.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
        image-name: my-cool-service-ki # Provide Docker image name
        pull-image: true # Raise the flag to try to pull image

  build-with-build-arg:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2.5.0 # Checking out the repo

    - name: Build and publish Docker Images to GitHub Container registry
      uses: VaultVulp/gp-docker-action@1.6.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages      
        image-name: my-cool-service-ki # Provide Docker image name
        custom-args: --build-arg=SOME_BUILD_ARG="NEW-VALUE" --build-arg=APP_BUILD_RUNTIME="linux-arm" --build-arg=DOCKER_BUILD_RUNTIME="mcr.microsoft.com/dotnet/runtime:6.0.3-bullseye-slim-arm64v8" --build-arg=DOCKER_BUILD_SDK="mcr.microsoft.com/dotnet/sdk:6.0.201-bullseye-slim-arm64v8"
        # Pass "NEW VALUE" into the SOME_BUILD_ARG
        
  build-and-publish-multiple-tags:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.5.0 # Checking out the repo

    - name: Build and Publish head Docker image
      uses: VaultVulp/gp-docker-action@1.6.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
        image-name: my-cool-service-ki # Provide Docker image name
        image-tag: head # Provide Docker image tag
        additional-image-tags: doot foo bar

  build-and-publish-multiple-platforms:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.5.0 # Checking out the repo

    - name: Build and Publish ARM64 image
      uses: VaultVulp/gp-docker-action@1.6.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
        image-name: my-cool-service-ki # Provide Docker image name
        image-tag: arm64 # Provide Docker image tag
        dockerfile: arm64.Dockerfile  # Provide Dockerfile for ARM64
        custom-args: --platform=linux/arm64,linux/amd64 # specify target architectures via the custom-args agrument

  pull-and-build-arm-image:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.5.0 # Checking out the repo

    - name: Build and Publish ARM64 image
      uses: VaultVulp/gp-docker-action@1.6.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
        image-name: my-cool-service-ki # Provide Docker image name
        image-tag: arm64-pull # Provide Docker image tag
        dockerfile: arm64.Dockerfile  # Provide Dockerfile for ARM64
        image-platform: linux/arm64 # specify target architecture
        pull-image: true

